import static tea.Assert.assertEquals;
import static tea.TeaAssert.assertEquals;
import org.junit.jupiter.api.Test;

public class LambdaTest extends tea.TeaBase {
  @Test
  public void test() {
    createDriver('chrome');
    driver.get(new java.io.File('../Wizard/Page1.html').toURI().toString());

    #
      'Name'> = 'John'

      // Call a lambda function with a parameter.
      // A current TeaElement object is given in the parameter.
      // Note that () is required even with one parameter in Tea script.
      (element) -> {
        assertEquals(element.getAttribute('id'), 'email');
        return 'john@email'; // The return value will be set to the current element.
      }

      // Call a lambda function with no parameters
      () => {
        assertEquals(#*#.getAttribute('id'), 'place'); // current element is place in original contenxt
        pushContext(); // save the current context and create a new one
        #'Name'> += ' Smith'# // Access Name input element and count up element index
        assertEquals(#*#.getAttribute('id'), 'email'); // current element is email in the new contenxt
        popContext(); // change back to original context
        assertEquals(currentElement().getAttribute('id'), 'place'); // current element is changed back to place.
        return null;
      }

      assertEquals(#*#.getAttribute('id'), 'place')
      'Tokyo' // Select a place
      true    // click Next button
    #

    assertEquals(#'NAME'@>, 'John Smith', 'Name entered');
    assertEquals(#'EMAIL'@>, 'john@email', 'Email entered');
    assertEquals(#'PLACE'@>, 'Tokyo', 'Place selected');

    driver.quit();
  }
}
